name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            name: words-with-toddlers-windows-x64.exe
            
          - target: x86_64-apple-darwin
            os: macos-latest
            name: words-with-toddlers-macos-x64
            
          - target: aarch64-apple-darwin
            os: macos-latest
            name: words-with-toddlers-macos-arm64
            
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: words-with-toddlers-linux-x64

    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      
      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libxkbcommon-dev libwayland-dev
      
      - name: Build Release Binary
        run: cargo build --release --target ${{ matrix.target }}
      
      - name: Prepare Binary (Windows)
        if: runner.os == 'Windows'
        run: |
          mv target/${{ matrix.target }}/release/words-with-toddlers.exe ${{ matrix.name }}
      
      - name: Prepare Binary (Unix)
        if: runner.os != 'Windows'
        run: |
          mv target/${{ matrix.target }}/release/words-with-toddlers ${{ matrix.name }}
          chmod +x ${{ matrix.name }}
      
      - name: Create Archive (Windows)
        if: runner.os == 'Windows'
        run: |
          7z a ${{ matrix.name }}.zip ${{ matrix.name }} README.md
      
      - name: Create Archive (macOS)
        if: runner.os == 'macOS'
        run: |
          tar czf ${{ matrix.name }}.tar.gz ${{ matrix.name }} README.md
      
      - name: Create Archive (Linux)
        if: runner.os == 'Linux'
        run: |
          tar czf ${{ matrix.name }}.tar.gz ${{ matrix.name }} README.md
      
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: |
            *.tar.gz
            *.zip

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}